use crate::{
    define_uuid, AeAntibandingMode, AeFlickerState, AeMode, AeState, AfMode, AwbMode, AwbState,
    CVOutput, CaptureIntent, PixelFormat, PixelFormatType, StreamType,
};

impl AeAntibandingMode {
    define_uuid!(OFF, 0xAD1E5560, 0x9C16, 0x11E8, 0xB568, 0x18, 0x00, 0x20, 0x0C, 0x9A, 0x66);
    define_uuid!(AUTO, 0xAD1E5561, 0x9C16, 0x11E8, 0xB568, 0x18, 0x00, 0x20, 0x0C, 0x9A, 0x66);
    define_uuid!(F50HZ, 0xAD1E5562, 0x9C16, 0x11E8, 0xB568, 0x18, 0x00, 0x20, 0x0C, 0x9A, 0x66);
    define_uuid!(F60HZ, 0xAD1E5563, 0x9C16, 0x11E8, 0xB568, 0x18, 0x00, 0x20, 0x0C, 0x9A, 0x66);
}

impl AeMode {
    define_uuid!(OFF, 0xFCACB1E0, 0xC6E5, 0x11ED, 0xA901, 0x08, 0x00, 0x20, 0x0C, 0x9A, 0x66);
    define_uuid!(ON, 0xFCACB1E1, 0xC6E5, 0x11ED, 0xA901, 0x08, 0x00, 0x20, 0x0C, 0x9A, 0x66);
}

impl AeFlickerState {
    define_uuid!(NONE, 0xAD1E5564, 0x9C16, 0x11E8, 0xB568, 0x18, 0x00, 0x20, 0x0C, 0x9A, 0x66);
    define_uuid!(F50HZ, 0xAD1E5565, 0x9C16, 0x11E8, 0xB568, 0x18, 0x00, 0x20, 0x0C, 0x9A, 0x66);
    define_uuid!(F60HZ, 0xAD1E5566, 0x9C16, 0x11E8, 0xB568, 0x18, 0x00, 0x20, 0x0C, 0x9A, 0x66);
}

impl AeState {
    define_uuid!(INACTIVE, 0xD2EBEA50, 0x9C16, 0x11E8, 0xB568, 0x18, 0x00, 0x20, 0x0C, 0x9A, 0x66);
    define_uuid!(SEARCHING, 0xD2EBEA51, 0x9C16, 0x11E8, 0xB568, 0x18, 0x00, 0x20, 0x0C, 0x9A, 0x66);
    define_uuid!(CONVERGED, 0xD2EBEA52, 0x9C16, 0x11E8, 0xB568, 0x18, 0x00, 0x20, 0x0C, 0x9A, 0x66);
    define_uuid!(
        FLASH_REQUIRED,
        0xD2EBEA53,
        0x9C16,
        0x11E8,
        0xB568,
        0x18,
        0x00,
        0x20,
        0x0C,
        0x9A,
        0x66
    );
    define_uuid!(TIMEOUT, 0xD2EBEA54, 0x9C16, 0x11E8, 0xB568, 0x18, 0x00, 0x20, 0x0C, 0x9A, 0x66);
}

impl AwbMode {
    define_uuid!(OFF, 0xFB3F365A, 0xCC62, 0x11E5, 0x9956, 0x62, 0x56, 0x62, 0x87, 0x07, 0x61);
    define_uuid!(AUTO, 0xFB3F365B, 0xCC62, 0x11E5, 0x9956, 0x62, 0x56, 0x62, 0x87, 0x07, 0x61);
    define_uuid!(
        INCANDESCENT,
        0xFB3F365C,
        0xCC62,
        0x11E5,
        0x9956,
        0x62,
        0x56,
        0x62,
        0x87,
        0x07,
        0x61
    );
    define_uuid!(
        FLUORESCENT,
        0xFB3F365D,
        0xCC62,
        0x11E5,
        0x9956,
        0x62,
        0x56,
        0x62,
        0x87,
        0x07,
        0x61
    );
    define_uuid!(
        WARM_FLUORESCENT,
        0xFB3F365E,
        0xCC62,
        0x11E5,
        0x9956,
        0x62,
        0x56,
        0x62,
        0x87,
        0x07,
        0x61
    );
    define_uuid!(DAYLIGHT, 0xFB3F365F, 0xCC62, 0x11E5, 0x9956, 0x62, 0x56, 0x62, 0x87, 0x07, 0x61);
    define_uuid!(
        CLOUDY_DAYLIGHT,
        0xFB3F3660,
        0xCC62,
        0x11E5,
        0x9956,
        0x62,
        0x56,
        0x62,
        0x87,
        0x07,
        0x61
    );
    define_uuid!(TWILIGHT, 0xFB3F3661, 0xCC62, 0x11E5, 0x9956, 0x62, 0x56, 0x62, 0x87, 0x07, 0x61);
    define_uuid!(SHADE, 0xFB3F3662, 0xCC62, 0x11E5, 0x9956, 0x62, 0x56, 0x62, 0x87, 0x07, 0x61);
    define_uuid!(MANUAL, 0x20FB45DA, 0xC49F, 0x4293, 0xAB02, 0x13, 0x3F, 0x8C, 0xCA, 0xDD, 0x69);
}

impl AwbState {
    define_uuid!(INACTIVE, 0xE33CDB30, 0x9C16, 0x11E8, 0xB568, 0x18, 0x00, 0x20, 0x0C, 0x9A, 0x66);
    define_uuid!(SEARCHING, 0xE33CDB31, 0x9C16, 0x11E8, 0xB568, 0x18, 0x00, 0x20, 0x0C, 0x9A, 0x66);
    define_uuid!(CONVERGED, 0xE33CDB32, 0x9C16, 0x11E8, 0xB568, 0x18, 0x00, 0x20, 0x0C, 0x9A, 0x66);
    define_uuid!(LOCKED, 0xE33CDB33, 0x9C16, 0x11E8, 0xB568, 0x18, 0x00, 0x20, 0x0C, 0x9A, 0x66);
}

impl AfMode {
    define_uuid!(OFF, 0xFCACB1E3, 0xC6E5, 0x11ED, 0xA901, 0x08, 0x00, 0x20, 0x0C, 0x9A, 0x66);
    define_uuid!(AUTO, 0xFCACB1E4, 0xC6E5, 0x11ED, 0xA901, 0x08, 0x00, 0x20, 0x0C, 0x9A, 0x66);
    define_uuid!(MANUAL, 0xFCACB1E5, 0xC6E5, 0x11ED, 0xA901, 0x08, 0x00, 0x20, 0x0C, 0x9A, 0x66);
}

impl CaptureIntent {
    define_uuid!(MANUAL, 0xFB3F3663, 0xCC62, 0x11E5, 0x9956, 0x62, 0x56, 0x62, 0x87, 0x07, 0x61);
    define_uuid!(PREVIEW, 0xFB3F3664, 0xCC62, 0x11E5, 0x9956, 0x62, 0x56, 0x62, 0x87, 0x07, 0x61);
    define_uuid!(
        STILL_CAPTURE,
        0xFB3F3665,
        0xCC62,
        0x11E5,
        0x9956,
        0x62,
        0x56,
        0x62,
        0x87,
        0x07,
        0x61
    );
    define_uuid!(
        VIDEO_RECORD,
        0xFB3F3666,
        0xCC62,
        0x11E5,
        0x9956,
        0x62,
        0x56,
        0x62,
        0x87,
        0x07,
        0x61
    );
    define_uuid!(
        VIDEO_SNAPSHOT,
        0xFB3F3667,
        0xCC62,
        0x11E5,
        0x9956,
        0x62,
        0x56,
        0x62,
        0x87,
        0x07,
        0x61
    );
}

impl CVOutput {
    define_uuid!(NONE, 0xcf6353af, 0x331f, 0x4153, 0xaaba, 0x60, 0xef, 0x87, 0x36, 0x04, 0x03);
    define_uuid!(LINEAR, 0xfa260819, 0xbaf4, 0x4dea, 0x9c15, 0xeb, 0x96, 0xc0, 0x95, 0x0e, 0x0e);
    define_uuid!(
        NON_LINEAR, 0xf19a1652, 0x7e69, 0x4efe, 0xa6c9, 0x72, 0x05, 0xad, 0x9d, 0x95, 0xfe
    );
}

impl StreamType {
    define_uuid!(EGL, 0x3a659360, 0x5231, 0x11e7, 0x9598, 0x18, 0x00, 0x20, 0x0c, 0x9a, 0x66);
}

impl PixelFormat {
    define_uuid!(UNKNOWN, 0x00000000, 0x93d5, 0x11e5, 0x0000, 0x1c, 0xb7, 0x2c, 0xef, 0xd4, 0x1e);
    define_uuid!(Y8, 0x569be14a, 0x93d5, 0x11e5, 0x91bc, 0x1c, 0xb7, 0x2c, 0xef, 0xd4, 0x1e);
    define_uuid!(Y16, 0x56ddb19c, 0x93d5, 0x11e5, 0x8e2c, 0x1c, 0xb7, 0x2c, 0xef, 0xd4, 0x1e);
    define_uuid!(
        YCBCR_420_888,
        0x570c10e6,
        0x93d5,
        0x11e5,
        0x8ff3,
        0x1c,
        0xb7,
        0x2c,
        0xef,
        0xd4,
        0x1e
    );
    define_uuid!(
        YCBCR_422_888,
        0x573a7940,
        0x93d5,
        0x11e5,
        0x99c2,
        0x1c,
        0xb7,
        0x2c,
        0xef,
        0xd4,
        0x1e
    );
    define_uuid!(
        YCBCR_444_888,
        0x576043dc,
        0x93d5,
        0x11e5,
        0x8983,
        0x1c,
        0xb7,
        0x2c,
        0xef,
        0xd4,
        0x1e
    );
    define_uuid!(JPEG_BLOB, 0x578b08c4, 0x93d5, 0x11e5, 0x9686, 0x1c, 0xb7, 0x2c, 0xef, 0xd4, 0x1e);
    define_uuid!(RAW16, 0x57b484d8, 0x93d5, 0x11e5, 0xaeb6, 0x1c, 0xb7, 0x2c, 0xef, 0xd4, 0x1e);
    define_uuid!(P016, 0x57b484d9, 0x93d5, 0x11e5, 0xaeb6, 0x1c, 0xb7, 0x2c, 0xef, 0xd4, 0x1e);
    define_uuid!(RGBA, 0x091b5007, 0x6784, 0x4121, 0x94c7, 0x59, 0x0d, 0x29, 0x03, 0x36, 0x72);
}

impl PixelFormatType {
    define_uuid!(NONE, 0xb7d9b3a4, 0xcdc6, 0x4267, 0x9969, 0x57, 0xa3, 0x00, 0x9a, 0x41, 0x32);
    define_uuid!(YUV_ONLY, 0x45bdf956, 0x5624, 0x4c2b, 0xa196, 0xfa, 0x87, 0x6d, 0xa0, 0x84, 0x19);
    define_uuid!(RGB_ONLY, 0xa5e5e1e9, 0x56ac, 0x4d14, 0x8ce7, 0x39, 0x16, 0x05, 0x6c, 0x86, 0x4c);
    define_uuid!(BOTH, 0x7c0d1c33, 0xbd27, 0x4294, 0x9dc6, 0x04, 0x1f, 0x9f, 0x9d, 0x86, 0x3c);
}
